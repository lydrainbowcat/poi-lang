    struct index as Page{
        title "Random"
    };
    struct panel as Panel{};
    struct divider as Group{
        cntcol 4
    };
    struct content as Panel{};
    struct table as Table{
        cntrow 5
        cntcol 5
        bodypos ".."
    };
    index.add(panel);
    panel.add(divider);
    divider.add([content, 1,2]);
    index.generate();
    content.gappend(table);
    event[int, int] e;
    e += @[int a, int b] -> [] {
        int num = (a - 1) * 5 + b;
        if ((num == 2) || (num == 11) || (num == 12) || (num == 20)){
            struct t as Text{
                format "biu_<"
            };
            table.lappend([t, a, b]);
            t.ltext("Gift~");
        }
        else{
            struct t as Text{
                format "biu_<"
            };
            table.lappend([t, a, b]);
            t.ltext("233!");
        }
    };
    for init(int i = 1;)
        while(i <= 5)
        step(i++;)
    {
        for init(int j = 1;)
        while(j <= 5)
        step(j++;)
        {
            struct t as Text{};
            table.lappend([t, i, j]);
            t.ltext((i - 1) * 5 + j);
            if (i == 1){
                if (j == 1){
                    t.lclick([e, 1, 1]);
                }
                else if (j == 2){
                    t.lclick([e, 1, 2]);
                }
                else if (j == 3){
                    t.lclick([e, 1, 3]);
                }
                else if (j == 4) { t.lclick([e, 1, 4]); }
                else { t.lclick([e, 1, 5]); }
            }
            else if (i == 2){
                if (j == 1){
                    t.lclick([e, 2, 1]);
                }
                else if (j == 2){
                    t.lclick([e, 2, 2]);
                }
                else if (j == 3){
                    t.lclick([e, 2, 3]);
                }
                else if (j == 4) { t.lclick([e, 2, 4]); }
                else { t.lclick([e, 2, 5]); }
            }
            else if (i == 3){
                if (j == 1){
                    t.lclick([e, 3, 1]);
                }
                else if (j == 2){
                    t.lclick([e, 3, 2]);
                }
                else if (j == 3){
                    t.lclick([e, 3, 3]);
                }
                else if (j == 4) { t.lclick([e, 3, 4]); }
                else { t.lclick([e, 3, 5]); }
            }
            else if (i == 4) {
                if (j == 1){
                    t.lclick([e, 4, 1]);
                }
                else if (j == 2){
                    t.lclick([e, 4, 2]);
                }
                else if (j == 3){
                    t.lclick([e, 4, 3]);
                }
                else if (j == 4) { t.lclick([e, 4, 4]); }
                else { t.lclick([e, 4, 5]); }
            }
            else  {
                if (j == 1){
                    t.lclick([e, 5, 1]);
                }
                else if (j == 2){
                    t.lclick([e, 5, 2]);
                }
                else if (j == 3){
                    t.lclick([e, 5, 3]);
                }
                else if (j == 4) { t.lclick([e, 5, 4]); }
                else { t.lclick([e, 5, 5]); }
            }
        }
    }
    map tc;
    tc["width"] = 800;
    tc["height"] = tc["width"];
    tc["font-size"] = 50;
    table.css(tc);
    content.cssadd(["text-align", "center"]);